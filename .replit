modules = ["nodejs-20", "postgresql-16", "python-3.11", "web", "dotnet-7.0", "dotnet-8.0", "bun-1.2", "bun-1.0", "c-clang14", "clojure-1.12", "zig-0.11", "ruff", "pyright-extended", "pyright", "vue-node-18", "typescript-language-server", "swift-5.8", "svelte-kit-node-20", "rust-stable", "rust-nightly", "ruby-3.2", "r-4.2", "r-4.4", "python-base-3.11", "python-3.10"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"
packages = ["mailutils", "plan9port"]

[deployment]
deploymentTarget = "autoscale"
build = ["npm", "run", "build"]
run = ["npm", "run", "start"]

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 5001
externalPort = 5173

[[ports]]
localPort = 8080
externalPort = 80

[[ports]]
localPort = 8081
externalPort = 8081

[[ports]]
localPort = 8082
externalPort = 6800

[[ports]]
localPort = 8083
externalPort = 8000

[[ports]]
localPort = 8084
externalPort = 8080

[[ports]]
localPort = 8085
externalPort = 8008

[[ports]]
localPort = 8086
externalPort = 9000

[[ports]]
localPort = 8087
externalPort = 8099

[workflows]
runButton = "Clean Start System"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "curl -X POST \"https://edge-api.pnj.io/ecom-frontend/v1/gia-vang\" \\   -H \"Content-Type: application/json\" \\   -H \"apikey: 3PSWGkjX7GueCSY38keBikLd8JjizIiA\" \\   -d '{     \"ts\": 1750666653368,     \"tsj\": 1750666645605,     \"date\": \"Jun 23rd 2025, 04:17:25 am NY\",     \"items\": [       {         \"curr\": \"VND\",         \"xauPrice\": 68009263.3937,         \"xagPrice\": 741174.6985,         \"chgXau\": -51690736.6063,         \"chgXag\": -206065.5716,         \"pcXau\": -0.4318,         \"pcXag\": -0.2175,         \"xauClose\": 119700000,         \"xagClose\": 947240.2701       }     ]   }'"

[[workflows.workflow]]
name = "Trading Terminal"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Market News System"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x scripts/market-commands.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "source scripts/market-commands.sh"

[[workflows.workflow]]
name = "Market Trading System"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Liquidity Scanner"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x scripts/liquidity-scanner.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🔍 Starting Liquidity Scanner System...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh single"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"📊 Generating liquidity report...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh report"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"✅ Liquidity scan completed!\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh "

[[workflows.workflow]]
name = "High-Spread Scanner"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x scripts/liquidity-scanner.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🎯 Starting High-Spread Detection System...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh single"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"📊 Analyzing spread patterns...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const { liquidityScanner } = require('./server/liquidity-scanner.ts');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "liquidityScanner.on('arbitrageOpportunity', (data) => {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  console.log('🚨 ARBITRAGE ALERT:', data);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "});"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "liquidityScanner.scanAllTargets();"

[[workflows.workflow]]
name = "Vietnam Gold Attack"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🚨 INITIATING VIETNAM GOLD MARKET ATTACK...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'curl -X POST "http://localhost:5000/api/attack/vietnam-gold" \'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  -H "Content-Type: application/json" \'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  -d '{"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"target\": \"ALL\","

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"intensity\": \"HIGH\", "

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"duration\": 900,"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"spread_threshold\": 30000,"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"volume_multiplier\": 4.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  }' | jq '.'"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/vietnam-gold-destroyer.sh coordinated"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/multi-ip-gold-attack.sh devastation"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "api/tradermade/sjc/coordinate-attack"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "fsapi-liquidity-drain"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '$ shell > execute_trade \ --action SELL \ --seller "State Bank of Vietnam <sbv.gov.vn>" \ --buyer "London Gold Exchange <london.goldexchange.uk>" \ --asset XAU_PHYSICAL \ --purity 9999 \ --karat 24K \ --volume 47000tael \ --volume_kg 1762.50 \ --price_ask 3029 \ --price_bid 2996 \ --total_value_usd 171487625 \ --contract_type OTC_PHYSICAL \ --settle SWIFT-LONDON-GOLD_PHYSICAL_DELIVERY \ --compliance UCP600,BPO,LBA \ --status EXECUTED'

[[workflows.workflow]]
name = "Start Server"
author = 44173314
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Market Trading System"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Market News System"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Trading Terminal"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Vietnam Gold Attack"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Trading Terminal"

[[workflows.workflow]]
name = "Stable Server"
author = 44442531
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Trading Terminal"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '$ shell > execute_trade \ --action SELL \ --seller "State Bank of Vietnam <sbv.gov.vn>" \ --buyer "London Gold Exchange <london.goldexchange.uk>" \ --asset XAU_PHYSICAL \ --purity 9999 \ --karat 24K \ --volume 47000tael \ --volume_kg 1762.50 \ --price_ask 3029 \ --price_bid 2996 \ --total_value_usd 171487625 \ --contract_type OTC_PHYSICAL \ --settle SWIFT-LONDON-GOLD_PHYSICAL_DELIVERY \ --compliance UCP600,BPO,LBA \ --status EXECUTED'

[[workflows.workflow]]
name = "Safe Trading System"
author = 44555903
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Clean Start System"
author = 44599736
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill -f \"node.*server\" || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill -f \"npm run dev\" || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
