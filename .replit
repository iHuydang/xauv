modules = ["nodejs-20", "web", "postgresql-16"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
build = ["npm", "run", "build"]
run = ["npm", "run", "start"]

[[ports]]
localPort = 5000
externalPort = 5000

[workflows]
runButton = "Market Trading System"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "curl -X POST \"https://edge-api.pnj.io/ecom-frontend/v1/gia-vang\" \\   -H \"Content-Type: application/json\" \\   -H \"apikey: 3PSWGkjX7GueCSY38keBikLd8JjizIiA\" \\   -d '{     \"ts\": 1750666653368,     \"tsj\": 1750666645605,     \"date\": \"Jun 23rd 2025, 04:17:25 am NY\",     \"items\": [       {         \"curr\": \"VND\",         \"xauPrice\": 68009263.3937,         \"xagPrice\": 741174.6985,         \"chgXau\": -51690736.6063,         \"chgXag\": -206065.5716,         \"pcXau\": -0.4318,         \"pcXag\": -0.2175,         \"xauClose\": 119700000,         \"xagClose\": 947240.2701       }     ]   }'"

[[workflows.workflow]]
name = "Trading Terminal"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '''npm run dev STOP_LOSS=8500000 && \ RESPONSE=$(curl -s https://sjc.com.vn/giavang/textContent.php) && \ LINE=$(echo "$RESPONSE" | grep -m1 "SJC") && \ SELL_PRICE=$(echo "$LINE" | awk -F '</td><td>' '{gsub(/[^0-9]/,"",$3); print $3}') && \ echo "⏰ $(date '+%Y-%m-%d %H:%M:%S') - SJC Sell Price: $SELL_PRICE VND" && \ if [ "$SELL_PRICE" -lt "$STOP_LOSS" ]; then \   echo "🚨 STOP LOSS HIT! Price $SELL_PRICE is below $STOP_LOSS"; \ else \   echo "✅ Gold price is safe. Stop loss not triggered."; \ fi'''

[[workflows.workflow]]
name = "Market News System"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x scripts/market-commands.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "source scripts/market-commands.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow]]
name = "Market Trading System"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Liquidity Scanner"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x scripts/liquidity-scanner.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🔍 Starting Liquidity Scanner System...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh single"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"📊 Generating liquidity report...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh report"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"✅ Liquidity scan completed!\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh "

[[workflows.workflow]]
name = "High-Spread Scanner"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x scripts/liquidity-scanner.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🎯 Starting High-Spread Detection System...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "scripts/liquidity-scanner.sh single"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"📊 Analyzing spread patterns...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const { liquidityScanner } = require('./server/liquidity-scanner.ts');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "liquidityScanner.on('arbitrageOpportunity', (data) => {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  console.log('🚨 ARBITRAGE ALERT:', data);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "});"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "liquidityScanner.scanAllTargets();"

[[workflows.workflow]]
name = "Vietnam Gold Attack"
author = 44114932
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"🚨 INITIATING VIETNAM GOLD MARKET ATTACK...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'curl -X POST "http://localhost:5000/api/attack/vietnam-gold" \'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  -H "Content-Type: application/json" \'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  -d '{"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"target\": \"ALL\","

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"intensity\": \"HIGH\", "

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"duration\": 900,"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"spread_threshold\": 30000,"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    \"volume_multiplier\": 4.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  }' | jq '.'"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"✅ Attack command executed successfully\""
