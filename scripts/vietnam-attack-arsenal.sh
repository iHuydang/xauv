
#!/bin/bash

# Vietnam Gold Attack Arsenal
# Kho v≈© kh√≠ t·∫•n c√¥ng v√†ng Vi·ªát Nam - Phi√™n b·∫£n ƒë·∫ßy ƒë·ªß

set -e

# Configuration
API_BASE="http://localhost:5000"
PYTHON_SCANNER="python3 scripts/vietnam-gold-pressure-scanner.py"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# Ensure scripts are executable
chmod +x scripts/vietnam-gold-liquidity-attack.sh 2>/dev/null || true
chmod +x scripts/quick-vietnam-attack.sh 2>/dev/null || true
chmod +x scripts/vietnam-gold-comprehensive-attack.sh 2>/dev/null || true
chmod +x scripts/vietnam-gold-destroyer.sh 2>/dev/null || true

show_banner() {
    echo -e "${RED}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë          üö® KHO V≈® KH√ç T·∫§N C√îNG V√ÄNG VI·ªÜT NAM üö®          ‚ïë"
    echo "‚ïë                  ARSENAL VERSION 3.0                      ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

show_menu() {
    echo -e "${YELLOW}üìã MENU L·ªÜNH T·∫§N C√îNG HO√ÄN CH·ªàNH:${NC}"
    echo ""
    echo -e "${GREEN}=== C√ÅC L·ªÜNH NHANH ===${NC}"
    echo -e "${GREEN}1.${NC} quick_attack        - T·∫•n c√¥ng nhanh t·ªïng h·ª£p (30s)"
    echo -e "${GREEN}2.${NC} rapid_strike        - ƒê√≤n t·∫•n c√¥ng ch·ªõp nho√°ng (10s)"
    echo -e "${GREEN}3.${NC} instant_pressure    - √Åp l·ª±c t·ª©c th√¨ SJC"
    echo ""
    echo -e "${RED}=== C√ÅC L·ªÜNH √ÅP L·ª∞C ===${NC}"
    echo -e "${RED}4.${NC} sjc_pressure        - T·∫•n c√¥ng √°p l·ª±c SJC chuy√™n bi·ªát"
    echo -e "${RED}5.${NC} usdvnd_pressure     - √Åp l·ª±c USD/VND c∆∞·ªùng ƒë·ªô cao"
    echo -e "${RED}6.${NC} multi_target        - T·∫•n c√¥ng ƒëa m·ª•c ti√™u ƒë·ªìng th·ªùi"
    echo -e "${RED}7.${NC} devastation         - T·∫•n c√¥ng t√†n ph√° to√†n di·ªán"
    echo ""
    echo -e "${PURPLE}=== C√ÅC L·ªÜNH CHUY√äN S√ÇU ===${NC}"
    echo -e "${PURPLE}8.${NC} world_arbitrage     - Khai th√°c ch√™nh l·ªách gi√° th·∫ø gi·ªõi"
    echo -e "${PURPLE}9.${NC} fed_swap_attack     - T·∫•n c√¥ng FED swap liquidity"
    echo -e "${PURPLE}10.${NC} stealth_infiltrate  - Th√¢m nh·∫≠p √¢m th·∫ßm"
    echo -e "${PURPLE}11.${NC} liquidity_drain     - H√∫t c·∫°n thanh kho·∫£n"
    echo ""
    echo -e "${BLUE}=== C√ÅC L·ªÜNH BURST ===${NC}"
    echo -e "${BLUE}12.${NC} burst_attack        - T·∫•n c√¥ng burst s√≥ng th·∫ßn"
    echo -e "${BLUE}13.${NC} tsunami_mode        - Ch·∫ø ƒë·ªô s√≥ng th·∫ßn li√™n ho√†n"
    echo -e "${BLUE}14.${NC} nuclear_option      - T√πy ch·ªçn h·∫°t nh√¢n (c·ª±c k·ª≥ nguy hi·ªÉm)"
    echo ""
    echo -e "${CYAN}=== C√ÅC L·ªÜNH GI√ÅM S√ÅT ===${NC}"
    echo -e "${CYAN}15.${NC} auto_monitor        - Gi√°m s√°t t·ª± ƒë·ªông + t·∫•n c√¥ng"
    echo -e "${CYAN}16.${NC} vulnerability_scan  - Qu√©t ƒëi·ªÉm y·∫øu h·ªá th·ªëng"
    echo -e "${CYAN}17.${NC} real_time_analysis  - Ph√¢n t√≠ch th·ªùi gian th·ª±c"
    echo ""
    echo -e "${YELLOW}=== C√ÅC L·ªÜNH H·ªÜ TH·ªêNG ===${NC}"
    echo -e "${YELLOW}18.${NC} status              - Ki·ªÉm tra tr·∫°ng th√°i t·∫•t c·∫£"
    echo -e "${YELLOW}19.${NC} stop_all            - D·ª´ng t·∫•t c·∫£ t·∫•n c√¥ng"
    echo -e "${YELLOW}20.${NC} emergency_stop      - D·ª´ng kh·∫©n c·∫•p to√†n b·ªô"
    echo ""
}

# 1. Quick Attack - T·∫•n c√¥ng nhanh
quick_attack() {
    echo -e "${GREEN}‚ö° KH·ªûI CH·∫†Y T·∫§N C√îNG NHANH T·ªîNG H·ª¢P${NC}"
    
    # Parallel attacks trong 30 gi√¢y
    echo -e "${YELLOW}üöÄ Kh·ªüi ch·∫°y 6 vector t·∫•n c√¥ng ƒë·ªìng th·ªùi...${NC}"
    
    # Vector 1: SJC Pressure
    curl -X POST "$API_BASE/api/attack/sjc-pressure" \
        -H "Content-Type: application/json" \
        -d '{"intensity":"HIGH","duration":30,"vector":"QUICK_PRESSURE"}' &
    
    # Vector 2: USD/VND Pressure  
    $PYTHON_SCANNER full &
    
    # Vector 3: Multi-target attack
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh multi_target_attack &
    fi
    
    # Vector 4: World gold pressure
    curl -X POST "$API_BASE/api/world-gold/pressure" \
        -H "Content-Type: application/json" \
        -d '{"intensity":"MODERATE","duration":30}' &
    
    # Vector 5: Liquidity drainage
    curl -X POST "$API_BASE/api/attack/vietnam-gold" \
        -H "Content-Type: application/json" \
        -d '{"target":"ALL","intensity":"HIGH","duration":30,"volume_multiplier":3.0}' &
    
    # Vector 6: Broker pressure
    curl -X POST "$API_BASE/api/vietnam-gold/pressure-attack" \
        -H "Content-Type: application/json" \
        -d '{"targets":["SJC","DOJI"],"intensity":"high","duration":30}' &
    
    echo -e "${GREEN}‚úÖ T·∫•t c·∫£ 6 vector ƒë√£ kh·ªüi ch·∫°y! Ch·ªù 30 gi√¢y...${NC}"
    sleep 30
    echo -e "${GREEN}üèÅ T·∫•n c√¥ng nhanh ho√†n th√†nh!${NC}"
}

# 2. Rapid Strike - ƒê√≤n ch·ªõp nho√°ng
rapid_strike() {
    echo -e "${RED}‚ö° ƒê√íNG T·∫§N C√îNG CH·ªöP NHO√ÅNG (10 GI√ÇY)${NC}"
    
    if [ -f "scripts/rapid-vietnam-gold-strike.sh" ]; then
        scripts/rapid-vietnam-gold-strike.sh
    else
        echo -e "${YELLOW}üìù Executing inline rapid strike...${NC}"
        # Inline rapid strike
        for i in {1..10}; do
            echo -e "${RED}‚ö° Strike $i/10${NC}"
            curl -s -X POST "$API_BASE/api/attack/vietnam-gold" \
                -H "Content-Type: application/json" \
                -d '{"target":"SJC","intensity":"EXTREME","duration":1}' > /dev/null &
            sleep 1
        done
        wait
    fi
    
    echo -e "${GREEN}‚ö° Rapid strike ho√†n th√†nh!${NC}"
}

# 3. Instant Pressure - √Åp l·ª±c t·ª©c th√¨
instant_pressure() {
    echo -e "${RED}üö® √ÅP L·ª∞C T·ª®C TH√å SJC${NC}"
    
    curl -X POST "$API_BASE/api/attack/sjc-pressure" \
        -H "Content-Type: application/json" \
        -d '{
            "intensity": "MAXIMUM",
            "duration": 60,
            "vector": "INSTANT_SHOCK",
            "target_spread": 15000,
            "volume_multiplier": 8.0
        }' | jq '.'
}

# 4. SJC Pressure - √Åp l·ª±c SJC chuy√™n bi·ªát  
sjc_pressure() {
    local intensity=${1:-EXTREME}
    local duration=${2:-600}
    
    echo -e "${RED}üéØ T·∫§N C√îNG √ÅP L·ª∞C SJC CHUY√äN BI·ªÜT${NC}"
    echo -e "${YELLOW}C∆∞·ªùng ƒë·ªô: $intensity | Th·ªùi gian: ${duration}s${NC}"
    
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh attack_sjc_pressure "$intensity" "$duration"
    else
        curl -X POST "$API_BASE/api/attack/sjc-pressure" \
            -H "Content-Type: application/json" \
            -d '{
                "intensity": "'$intensity'",
                "duration": '$duration',
                "vector": "SPECIALIZED_PRESSURE",
                "target_spread": 25000,
                "volume_multiplier": 5.0
            }' | jq '.'
    fi
}

# 5. USD/VND Pressure - √Åp l·ª±c t·ª∑ gi√°
usdvnd_pressure() {
    local mode=${1:-HIGH}
    
    echo -e "${PURPLE}üí± √ÅP L·ª∞C USD/VND C∆Ø·ªúNG ƒê·ªò CAO${NC}"
    
    # Python scanner v·ªõi thu·∫≠t to√°n √°p l·ª±c
    echo -e "${BLUE}üîç Kh·ªüi ch·∫°y thu·∫≠t to√°n √°p l·ª±c USD/VND...${NC}"
    $PYTHON_SCANNER full
    
    # Comprehensive attack
    if [ -f "scripts/vietnam-gold-comprehensive-attack.sh" ]; then
        scripts/vietnam-gold-comprehensive-attack.sh execute_usdvnd_pressure "$mode" 900
    else
        curl -X POST "$API_BASE/api/forex/usdvnd-pressure" \
            -H "Content-Type: application/json" \
            -d '{
                "action": "INCREASE_VOLATILITY",
                "intensity": "'$mode'",
                "duration": 900,
                "overnight_pressure": true
            }' | jq '.'
    fi
}

# 6. Multi Target - ƒêa m·ª•c ti√™u
multi_target() {
    echo -e "${RED}üéØ T·∫§N C√îNG ƒêA M·ª§C TI√äU ƒê·ªíNG TH·ªúI${NC}"
    
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh multi_target_attack
    else
        # Inline multi-target
        targets=("SJC" "DOJI" "PNJ" "TYGIA_SJC")
        for target in "${targets[@]}"; do
            echo -e "${YELLOW}üéØ Attacking $target...${NC}"
            curl -X POST "$API_BASE/api/vietnam-gold/quick-attack/$target" \
                -H "Content-Type: application/json" \
                -d '{"intensity":"high"}' &
        done
        wait
    fi
}

# 7. Devastation - T√†n ph√° to√†n di·ªán
devastation() {
    echo -e "${RED}üíÄ T·∫§N C√îNG T√ÄN PH√Å TO√ÄN DI·ªÜN${NC}"
    echo -e "${RED}‚ö†Ô∏è C·∫¢NH B√ÅO: T·∫§N C√îNG M·ª®C ƒê·ªò T·ªêI ƒêA${NC}"
    
    if [ -f "scripts/vietnam-gold-destroyer.sh" ]; then
        scripts/vietnam-gold-destroyer.sh destroy
    else
        curl -X POST "$API_BASE/api/vietnam-gold/devastation-attack" \
            -H "Content-Type: application/json" \
            -d '{}' | jq '.'
    fi
}

# 8. World Arbitrage - Ch√™nh l·ªách th·∫ø gi·ªõi
world_arbitrage() {
    echo -e "${PURPLE}üåç KHAI TH√ÅC CH√äNH L·ªÜCH GI√Å TH·∫æ GI·ªöI${NC}"
    
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh world_price_arbitrage_attack
    else
        curl -X POST "$API_BASE/api/world-gold/arbitrage-exploit" \
            -H "Content-Type: application/json" \
            -d '{"intensity":"HIGH","duration":600}' | jq '.'
    fi
}

# 9. FED Swap Attack - T·∫•n c√¥ng FED
fed_swap_attack() {
    echo -e "${GREEN}üè¶ T·∫§N C√îNG FED SWAP LIQUIDITY${NC}"
    
    if [ -f "scripts/vietnam-gold-comprehensive-attack.sh" ]; then
        scripts/vietnam-gold-comprehensive-attack.sh execute_fed_swap_pressure 500000000 5.5
    else
        curl -X POST "$API_BASE/api/fed/swap-pressure" \
            -H "Content-Type: application/json" \
            -d '{
                "swap_volume": 500000000,
                "overnight_rate": 5.5,
                "pressure_vector": "OVERNIGHT_FUNDING_COST"
            }' | jq '.'
    fi
}

# 10. Stealth Infiltrate - Th√¢m nh·∫≠p √¢m th·∫ßm
stealth_infiltrate() {
    echo -e "${BLUE}üë§ TH√ÇM NH·∫¨P √ÇM TH·∫¶M${NC}"
    
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh stealth_liquidity_attack 20
    else
        curl -X POST "$API_BASE/api/attack/stealth" \
            -H "Content-Type: application/json" \
            -d '{"mode":"infiltrate","duration":1200,"stealth_level":"maximum"}' | jq '.'
    fi
}

# 11. Liquidity Drain - H√∫t c·∫°n thanh kho·∫£n
liquidity_drain() {
    local percentage=${1:-80}
    
    echo -e "${CYAN}üå™Ô∏è H√öT C·∫†N THANH KHO·∫¢N ($percentage%)${NC}"
    
    if [ -f "scripts/vietnam-gold-comprehensive-attack.sh" ]; then
        scripts/vietnam-gold-comprehensive-attack.sh execute_sjc_liquidity_drain "$percentage" 10
    else
        curl -X POST "$API_BASE/api/attack/liquidity-drain" \
            -H "Content-Type: application/json" \
            -d '{"percentage":'$percentage',"waves":10}' | jq '.'
    fi
}

# 12. Burst Attack - T·∫•n c√¥ng burst
burst_attack() {
    local bursts=${1:-8}
    local interval=${2:-12}
    
    echo -e "${BLUE}üí• T·∫§N C√îNG BURST S√ìNG TH·∫¶N${NC}"
    
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh burst_attack "$bursts" "$interval"
    else
        for ((i=1; i<=bursts; i++)); do
            echo -e "${RED}üí• Burst $i/$bursts${NC}"
            curl -X POST "$API_BASE/api/attack/vietnam-gold" \
                -H "Content-Type: application/json" \
                -d '{"target":"ALL","intensity":"EXTREME","duration":60}' &
            sleep "$interval"
        done
    fi
}

# 13. Tsunami Mode - S√≥ng th·∫ßn li√™n ho√†n
tsunami_mode() {
    echo -e "${RED}üåä CH·∫æ ƒê·ªò S√ìNG TH·∫¶N LI√äN HO√ÄN${NC}"
    
    if [ -f "scripts/vietnam-gold-comprehensive-attack.sh" ]; then
        scripts/vietnam-gold-comprehensive-attack.sh execute_synchronized_triple_attack 1800
    else
        # Simulate tsunami with multiple waves
        for wave in {1..5}; do
            echo -e "${RED}üåä Tsunami Wave $wave/5${NC}"
            curl -X POST "$API_BASE/api/attack/tsunami" \
                -H "Content-Type: application/json" \
                -d '{"wave":'$wave',"intensity":"MAXIMUM"}' &
            sleep 180  # 3 minutes between waves
        done
    fi
}

# 14. Nuclear Option - T√πy ch·ªçn h·∫°t nh√¢n
nuclear_option() {
    echo -e "${RED}‚ò¢Ô∏è T√ôY CH·ªåN H·∫†T NH√ÇN - C·ª∞C K·ª≤ NGUY HI·ªÇM${NC}"
    echo -e "${RED}‚ö†Ô∏è C·∫¢NH B√ÅO: ƒêI·ªÄU N√ÄY S·∫º G√ÇY RA T·∫§N C√îNG T·ªêI ƒêA${NC}"
    
    read -p "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c? (yes/no): " confirm
    if [ "$confirm" = "yes" ]; then
        echo -e "${RED}‚ò¢Ô∏è Kh·ªüi ch·∫°y nuclear option...${NC}"
        
        # All systems attack simultaneously
        quick_attack &
        devastation &
        tsunami_mode &
        
        echo -e "${RED}‚ò¢Ô∏è Nuclear attack initiated!${NC}"
    else
        echo -e "${YELLOW}‚ùå Nuclear option cancelled${NC}"
    fi
}

# 15. Auto Monitor - Gi√°m s√°t t·ª± ƒë·ªông
auto_monitor() {
    local threshold=${1:-35000}
    local interval=${2:-30}
    
    echo -e "${CYAN}üìä GI√ÅM S√ÅT T·ª∞ ƒê·ªòNG + T·∫§N C√îNG${NC}"
    
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh auto_monitor_attack "$interval" "$threshold"
    else
        curl -X POST "$API_BASE/api/monitoring/auto-attack" \
            -H "Content-Type: application/json" \
            -d '{"threshold":'$threshold',"interval":'$interval'}' | jq '.'
    fi
}

# 16. Vulnerability Scan - Qu√©t ƒëi·ªÉm y·∫øu
vulnerability_scan() {
    echo -e "${CYAN}üîç QU√âT ƒêI·ªÇM Y·∫æU H·ªÜ TH·ªêNG${NC}"
    
    curl -X GET "$API_BASE/api/vietnam-gold/vulnerability-analysis" | jq '.'
    
    echo -e "${YELLOW}üìä Ph√¢n t√≠ch Python scanner...${NC}"
    $PYTHON_SCANNER sjc
}

# 17. Real-time Analysis - Ph√¢n t√≠ch th·ªùi gian th·ª±c
real_time_analysis() {
    echo -e "${BLUE}üìà PH√ÇN T√çCH TH·ªúI GIAN TH·ª∞C${NC}"
    
    if [ -f "scripts/vietnam-gold-commands.sh" ]; then
        scripts/vietnam-gold-commands.sh monitor 15
    else
        while true; do
            clear
            echo -e "${BLUE}üìä REAL-TIME VIETNAM GOLD ANALYSIS${NC}"
            echo "$(date)"
            echo ""
            
            curl -s "$API_BASE/api/vietnam-gold/prices" | jq '.data.prices[]' 2>/dev/null || echo "API not available"
            echo ""
            
            $PYTHON_SCANNER quick 2>/dev/null || echo "Scanner not available"
            
            sleep 15
        done
    fi
}

# 18. Status Check - Ki·ªÉm tra tr·∫°ng th√°i
status_check() {
    echo -e "${YELLOW}üìä KI·ªÇM TRA TR·∫†NG TH√ÅI T·∫§T C·∫¢ H·ªÜ TH·ªêNG${NC}"
    
    echo -e "${BLUE}üåê API Status:${NC}"
    curl -s "$API_BASE/api/vietnam-gold/broker-status" | jq '.' || echo "Broker API offline"
    
    echo -e "${BLUE}üîç Scanner Status:${NC}"
    $PYTHON_SCANNER quick || echo "Scanner offline"
    
    echo -e "${BLUE}‚öîÔ∏è Attack Status:${NC}"
    curl -s "$API_BASE/api/attack/status" | jq '.' || echo "Attack API offline"
}

# 19. Stop All - D·ª´ng t·∫•t c·∫£
stop_all() {
    echo -e "${YELLOW}‚èπÔ∏è D·ª™NG T·∫§T C·∫¢ T·∫§N C√îNG${NC}"
    
    if [ -f "scripts/vietnam-gold-liquidity-attack.sh" ]; then
        scripts/vietnam-gold-liquidity-attack.sh stop_all_attacks
    fi
    
    if [ -f "scripts/vietnam-gold-comprehensive-attack.sh" ]; then
        scripts/vietnam-gold-comprehensive-attack.sh stop_all_comprehensive_attacks
    fi
    
    curl -X POST "$API_BASE/api/attack/stop-all" | jq '.' || echo "Stop API call failed"
    
    echo -e "${GREEN}‚úÖ T·∫•t c·∫£ t·∫•n c√¥ng ƒë√£ d·ª´ng${NC}"
}

# 20. Emergency Stop - D·ª´ng kh·∫©n c·∫•p
emergency_stop() {
    echo -e "${RED}üö® D·ª™NG KH·∫®N C·∫§P TO√ÄN B·ªò H·ªÜ TH·ªêNG${NC}"
    
    # Kill all related processes
    pkill -f "vietnam-gold" 2>/dev/null || true
    pkill -f "sjc-" 2>/dev/null || true
    pkill -f "pressure-scanner" 2>/dev/null || true
    
    # API stop calls
    curl -X POST "$API_BASE/api/emergency/stop-all" 2>/dev/null || true
    
    echo -e "${RED}üö® H·ªÜ TH·ªêNG ƒê√É D·ª™NG KH·∫®N C·∫§P${NC}"
}

# Main execution logic
main() {
    show_banner
    
    if [ $# -eq 0 ]; then
        show_menu
        echo ""
        read -p "Ch·ªçn l·ªánh (1-20): " choice
        echo ""
        
        case $choice in
            1|"quick_attack") quick_attack ;;
            2|"rapid_strike") rapid_strike ;;
            3|"instant_pressure") instant_pressure ;;
            4|"sjc_pressure") sjc_pressure "${2:-EXTREME}" "${3:-600}" ;;
            5|"usdvnd_pressure") usdvnd_pressure "${2:-HIGH}" ;;
            6|"multi_target") multi_target ;;
            7|"devastation") devastation ;;
            8|"world_arbitrage") world_arbitrage ;;
            9|"fed_swap_attack") fed_swap_attack ;;
            10|"stealth_infiltrate") stealth_infiltrate ;;
            11|"liquidity_drain") liquidity_drain "${2:-80}" ;;
            12|"burst_attack") burst_attack "${2:-8}" "${3:-12}" ;;
            13|"tsunami_mode") tsunami_mode ;;
            14|"nuclear_option") nuclear_option ;;
            15|"auto_monitor") auto_monitor "${2:-35000}" "${3:-30}" ;;
            16|"vulnerability_scan") vulnerability_scan ;;
            17|"real_time_analysis") real_time_analysis ;;
            18|"status") status_check ;;
            19|"stop_all") stop_all ;;
            20|"emergency_stop") emergency_stop ;;
            *) echo -e "${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!${NC}" ;;
        esac
    else
        # Command line mode
        case "${1}" in
            "quick_attack"|"1") quick_attack ;;
            "rapid_strike"|"2") rapid_strike ;;
            "instant_pressure"|"3") instant_pressure ;;
            "sjc_pressure"|"4") sjc_pressure "${2:-EXTREME}" "${3:-600}" ;;
            "usdvnd_pressure"|"5") usdvnd_pressure "${2:-HIGH}" ;;
            "multi_target"|"6") multi_target ;;
            "devastation"|"7") devastation ;;
            "world_arbitrage"|"8") world_arbitrage ;;
            "fed_swap_attack"|"9") fed_swap_attack ;;
            "stealth_infiltrate"|"10") stealth_infiltrate ;;
            "liquidity_drain"|"11") liquidity_drain "${2:-80}" ;;
            "burst_attack"|"12") burst_attack "${2:-8}" "${3:-12}" ;;
            "tsunami_mode"|"13") tsunami_mode ;;
            "nuclear_option"|"14") nuclear_option ;;
            "auto_monitor"|"15") auto_monitor "${2:-35000}" "${3:-30}" ;;
            "vulnerability_scan"|"16") vulnerability_scan ;;
            "real_time_analysis"|"17") real_time_analysis ;;
            "status"|"18") status_check ;;
            "stop_all"|"19") stop_all ;;
            "emergency_stop"|"20") emergency_stop ;;
            "help"|"--help"|"-h")
                show_menu
                echo ""
                echo "S·ª≠ d·ª•ng: $0 [command] [options]"
                echo "V√≠ d·ª•: $0 quick_attack"
                echo "       $0 sjc_pressure EXTREME 900"
                echo "       $0 liquidity_drain 85"
                ;;
            *)
                echo -e "${RED}‚ùå L·ªánh kh√¥ng h·ª£p l·ªá: $1${NC}"
                show_menu
                ;;
        esac
    fi
}

# Execute main function
main "$@"
