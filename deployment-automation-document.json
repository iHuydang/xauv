{
  "schemaVersion": "0.3",
  "description": "AWS Deployment Connector - Persistent Shell Command Execution",
  "assumeRole": "arn:aws:iam::207567762473:role/AWS-QuickSetup-JITNA-LocalAdministrationRole",
  "parameters": {
    "InstanceId": {
      "type": "String",
      "description": "EC2 Instance ID",
      "default": "i-05c4d8f39e43b8280"
    },
    "DeploymentPort": {
      "type": "String",
      "description": "Deployment port",
      "default": "5000"
    },
    "Command": {
      "type": "String",
      "description": "Shell command to execute",
      "default": "npm run dev"
    }
  },
  "mainSteps": [
    {
      "name": "ExecutePersistentCommand",
      "action": "aws:runCommand",
      "maxAttempts": 3,
      "timeoutSeconds": 3600,
      "inputs": {
        "DocumentName": "AWS-RunShellScript",
        "InstanceIds": ["{{ InstanceId }}"],
        "Parameters": {
          "commands": [
            "#!/bin/bash",
            "set -e",
            "echo 'ðŸš€ Starting AWS Deployment Connector'",
            "echo 'Instance: {{ InstanceId }}'",
            "echo 'Port: {{ DeploymentPort }}'",
            "echo 'Command: {{ Command }}'",
            "",
            "# Create deployment directory",
            "mkdir -p /tmp/aws-deployment",
            "cd /tmp/aws-deployment",
            "",
            "# Download deployment connector",
            "curl -o aws-deployment-connector.sh https://raw.githubusercontent.com/your-repo/aws-deployment-connector.sh || echo 'Using local script'",
            "",
            "# Make executable",
            "chmod +x aws-deployment-connector.sh || true",
            "",
            "# Create persistent execution wrapper",
            "cat > persistent-wrapper.sh << 'WRAPPER_EOF'",
            "#!/bin/bash",
            "set -e",
            "export PORT={{ DeploymentPort }}",
            "export HOST=0.0.0.0",
            "export NODE_ENV=production",
            "",
            "# Function to execute command persistently",
            "execute_persistent() {",
            "    local cmd='{{ Command }}'",
            "    local max_retries=999",
            "    local retry_count=0",
            "    ",
            "    while [ \ -lt \ ]; do",
            "        echo \\"Execution attempt \1\\"",
            "        ",
            "        if timeout 3600 \; then",
            "            echo \\"Command completed successfully\\"",
            "        else",
            "            echo \\"Command failed or timed out, retrying...\\"",
            "            retry_count=\1",
            "            sleep 5",
            "        fi",
            "    done",
            "}",
            "",
            "# Start persistent execution",
            "execute_persistent",
            "WRAPPER_EOF",
            "",
            "# Make wrapper executable",
            "chmod +x persistent-wrapper.sh",
            "",
            "# Execute persistent wrapper in background",
            "nohup ./persistent-wrapper.sh > /tmp/deployment-automation.log 2>&1 &",
            "echo \ > /tmp/deployment-automation.pid",
            "",
            "# Show status",
            "echo 'âœ… Persistent deployment started'",
            "echo 'PID:' \",
            "echo 'Log: /tmp/deployment-automation.log'",
            "echo 'Port: {{ DeploymentPort }}'",
            "",
            "# Monitor for initial 60 seconds",
            "for i in {1..12}; do",
            "    if ps -p \ > /dev/null 2>&1; then",
            "        echo \\"Process running (check \/12)\\"",
            "    else",
            "        echo \\"Process not running (check \/12)\\"",
            "    fi",
            "    sleep 5",
            "done",
            "",
            "echo 'ðŸŽ¯ Deployment automation completed'"
          ]
        }
      }
    }
  ]
}
