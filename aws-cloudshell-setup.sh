#!/bin/bash

# AWS CloudShell Setup Guide
# H∆∞·ªõng d·∫´n thi·∫øt l·∫≠p v√† s·ª≠ d·ª•ng AWS CloudShell ƒë·ªÉ ch·∫°y AWS Replication Agent

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üåê AWS CloudShell Setup Guide${NC}"
echo "================================="
echo "Region: ap-northeast-1 (Asia Pacific - Tokyo)"
echo "Purpose: Ch·∫°y AWS Replication Agent Installation"
echo

# Function to show CloudShell access methods
show_cloudshell_access() {
    echo -e "${YELLOW}üìç C√°ch truy c·∫≠p AWS CloudShell:${NC}"
    echo
    echo "1. VIA AWS CONSOLE:"
    echo "   - ƒêƒÉng nh·∫≠p: https://ap-northeast-1.console.aws.amazon.com"
    echo "   - T√¨m CloudShell icon ·ªü thanh navigation bar (terminal icon)"
    echo "   - Click v√†o CloudShell icon ƒë·ªÉ m·ªü terminal"
    echo
    echo "2. VIA DIRECT LINK:"
    echo "   - URL: https://ap-northeast-1.console.aws.amazon.com/cloudshell/home?region=ap-northeast-1"
    echo
    echo "3. VIA AWS CLI (n·∫øu ƒë√£ c√†i):"
    echo "   - aws cloudshell create-environment --region ap-northeast-1"
    echo
}

# Function to show CloudShell commands
show_cloudshell_commands() {
    echo -e "${YELLOW}‚ö° L·ªánh ch·∫°y trong AWS CloudShell:${NC}"
    echo
    echo "# B∆∞·ªõc 1: T·∫£i AWS Replication Installer"
    echo "wget -O aws-replication-installer-init https://aws-application-migration-service-ap-northeast-1.s3.ap-northeast-1.amazonaws.com/latest/linux/aws-replication-installer-init"
    echo
    echo "# B∆∞·ªõc 2: C·∫•p quy·ªÅn th·ª±c thi"
    echo "chmod +x aws-replication-installer-init"
    echo
    echo "# B∆∞·ªõc 3: Ch·∫°y installer (v·ªõi credentials c·ªßa b·∫°n)"
    echo "sudo ./aws-replication-installer-init \\"
    echo "  --region ap-northeast-1 \\"
    echo "  --aws-access-key-id ieagleviet@gmail.com \\"
    echo "  --aws-secret-access-key '\$Xcz\$ApH*=M55#2' \\"
    echo "  --no-prompt"
    echo
    echo "# B∆∞·ªõc 4: Ki·ªÉm tra tr·∫°ng th√°i"
    echo "sudo systemctl status aws-replication-agent"
    echo
}

# Function to show EC2 alternative
show_ec2_alternative() {
    echo -e "${YELLOW}üñ•Ô∏è Alternative: S·ª≠ d·ª•ng EC2 Instance${NC}"
    echo
    echo "N·∫øu CloudShell kh√¥ng kh·∫£ d·ª•ng, b·∫°n c√≥ th·ªÉ:"
    echo
    echo "1. LAUNCH EC2 INSTANCE:"
    echo "   - AMI: Amazon Linux 2 (free tier eligible)"
    echo "   - Instance Type: t2.micro (free tier)"
    echo "   - Region: ap-northeast-1"
    echo
    echo "2. CONNECT VIA SSH:"
    echo "   - S·ª≠ d·ª•ng EC2 Instance Connect"
    echo "   - Ho·∫∑c SSH v·ªõi key pair"
    echo
    echo "3. RUN SAME COMMANDS nh∆∞ trong CloudShell"
    echo
}

# Function to troubleshoot common issues
show_troubleshooting() {
    echo -e "${YELLOW}üîß Troubleshooting Common Issues:${NC}"
    echo
    echo "‚ùå ISSUE: CloudShell kh√¥ng t√¨m th·∫•y"
    echo "‚úÖ SOLUTION:"
    echo "   - ƒê·∫£m b·∫£o ƒëƒÉng nh·∫≠p ƒë√∫ng AWS account"
    echo "   - Ki·ªÉm tra region: ap-northeast-1"
    echo "   - CloudShell c√≥ th·ªÉ b·ªã ·∫©n trong 'More services'"
    echo
    echo "‚ùå ISSUE: Permission denied khi ch·∫°y installer"
    echo "‚úÖ SOLUTION:"
    echo "   - S·ª≠ d·ª•ng 'sudo' tr∆∞·ªõc l·ªánh"
    echo "   - Ki·ªÉm tra file permissions: ls -la aws-replication-installer-init"
    echo
    echo "‚ùå ISSUE: Invalid credentials"
    echo "‚úÖ SOLUTION:"
    echo "   - Ki·ªÉm tra Access Key ID v√† Secret Key"
    echo "   - ƒê·∫£m b·∫£o IAM user c√≥ quy·ªÅn AWSApplicationMigrationAgentInstallationPolicy"
    echo
    echo "‚ùå ISSUE: Network connectivity"
    echo "‚úÖ SOLUTION:"
    echo "   - Test: ping aws-application-migration-service-ap-northeast-1.amazonaws.com"
    echo "   - Ki·ªÉm tra security groups v√† firewall"
    echo
}

# Function to show pre-installation checklist
show_checklist() {
    echo -e "${BLUE}üìã Pre-Installation Checklist${NC}"
    echo "=========================="
    echo
    echo "‚ñ° AWS Account Access:"
    echo "  - ƒêƒÉng nh·∫≠p ƒë∆∞·ª£c AWS Console"
    echo "  - Access Key: ieagleviet@gmail.com"
    echo "  - Secret Key: \$Xcz\$ApH*=M55#2"
    echo
    echo "‚ñ° IAM Permissions:"
    echo "  - AWSApplicationMigrationAgentInstallationPolicy attached"
    echo "  - MGN service permissions"
    echo
    echo "‚ñ° Network Requirements:"
    echo "  - Internet connectivity"
    echo "  - Access to AWS endpoints"
    echo
    echo "‚ñ° System Requirements:"
    echo "  - Linux environment (CloudShell/EC2)"
    echo "  - Sudo access"
    echo "  - Minimum 1GB free space"
    echo
}

# Function to generate step-by-step guide
generate_step_guide() {
    echo -e "${GREEN}üöÄ STEP-BY-STEP INSTALLATION GUIDE${NC}"
    echo "=================================="
    echo
    echo "STEP 1: Access AWS CloudShell"
    echo "------------------------------"
    echo "1. Go to: https://ap-northeast-1.console.aws.amazon.com"
    echo "2. Login with your AWS credentials"
    echo "3. Look for CloudShell icon (terminal) in top navigation"
    echo "4. Click to open CloudShell terminal"
    echo
    echo "STEP 2: Download Installer"
    echo "--------------------------"
    echo "Copy and paste this command:"
    echo "wget -O aws-replication-installer-init https://aws-application-migration-service-ap-northeast-1.s3.ap-northeast-1.amazonaws.com/latest/linux/aws-replication-installer-init"
    echo
    echo "STEP 3: Make Executable"
    echo "-----------------------"
    echo "chmod +x aws-replication-installer-init"
    echo
    echo "STEP 4: Install Agent"
    echo "--------------------"
    echo "sudo ./aws-replication-installer-init --region ap-northeast-1 --aws-access-key-id ieagleviet@gmail.com --aws-secret-access-key '\$Xcz\$ApH*=M55#2' --no-prompt"
    echo
    echo "STEP 5: Verify Installation"
    echo "---------------------------"
    echo "sudo systemctl status aws-replication-agent"
    echo
}

# Main function
main() {
    case "${1:-guide}" in
        "guide")
            generate_step_guide
            ;;
        "access")
            show_cloudshell_access
            ;;
        "commands")
            show_cloudshell_commands
            ;;
        "ec2")
            show_ec2_alternative
            ;;
        "troubleshoot")
            show_troubleshooting
            ;;
        "checklist")
            show_checklist
            ;;
        "all")
            show_checklist
            echo
            show_cloudshell_access
            echo
            show_cloudshell_commands
            echo
            show_troubleshooting
            ;;
        "help"|"--help")
            echo "Usage: $0 [guide|access|commands|ec2|troubleshoot|checklist|all|help]"
            echo
            echo "Commands:"
            echo "  guide       - H∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc chi ti·∫øt (default)"
            echo "  access      - C√°ch truy c·∫≠p AWS CloudShell"
            echo "  commands    - L·ªánh ch·∫°y trong CloudShell"
            echo "  ec2         - Alternative s·ª≠ d·ª•ng EC2"
            echo "  troubleshoot- X·ª≠ l√Ω s·ª± c·ªë th∆∞·ªùng g·∫∑p"
            echo "  checklist   - Checklist tr∆∞·ªõc khi c√†i ƒë·∫∑t"
            echo "  all         - Hi·ªÉn th·ªã t·∫•t c·∫£ th√¥ng tin"
            echo "  help        - Hi·ªÉn th·ªã tr·ª£ gi√∫p"
            ;;
        *)
            echo -e "${RED}‚ùå L·ªánh kh√¥ng h·ª£p l·ªá: $1${NC}"
            echo "S·ª≠ d·ª•ng: $0 help ƒë·ªÉ xem tr·ª£ gi√∫p"
            exit 1
            ;;
    esac
}

# Run main function
main "$@"